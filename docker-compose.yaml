services:
  postgres:
    image: postgres:18
    container_name: poe-postgres
    restart: unless-stopped
    hostname: pgdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:8
    container_name: poe-redis
    restart: unless-stopped
    hostname: bullmq
    environment:
      REDIS_PASSWORD: ${BULLMQ_PASSWORD}
    command: [
      "redis-server", 
      "--requirepass", "${BULLMQ_PASSWORD}",
      "--appendonly", "yes",
      "--appendfsync", "everysec"
      ]
    ports:
      - "${BULLMQ_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${BULLMQ_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  poe-call-management:
    container_name: poe-call-management
    build: 
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "${CALL_MANAGEMENT_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      CALL_MANAGEMENT_PORT: ${CALL_MANAGEMENT_PORT:-3000}
      CALL_MANAGEMENT_HOSTNAME: ${CALL_MANAGEMENT_HOSTNAME:-127.0.0.1}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE}
      JWT_SECRET: ${JWT_SECRET}
      BULLMQ_HOST: ${BULLMQ_HOST}
      BULLMQ_PORT: ${BULLMQ_PORT}
      BULLMQ_PASSWORD: ${BULLMQ_PASSWORD}
      BULLMQ_GLOBAL_CONCURRENCY: ${BULLMQ_GLOBAL_CONCURRENCY}
      TRANSCRIPTION_MAX_RETRY_COUNT: ${TRANSCRIPTION_MAX_RETRY_COUNT}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "${CALL_MANAGEMENT_HOSTNAME}:${CALL_MANAGEMENT_PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  poe-transcription-workers:
    container_name: poe-transcription-workers
    build: 
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      poe-call-management:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE}
      BULLMQ_HOST: ${BULLMQ_HOST}
      BULLMQ_PORT: ${BULLMQ_PORT}
      BULLMQ_PASSWORD: ${BULLMQ_PASSWORD}
      BULLMQ_GLOBAL_CONCURRENCY: ${BULLMQ_GLOBAL_CONCURRENCY}
      TRANSCRIPTION_MAX_RETRY_COUNT: ${TRANSCRIPTION_MAX_RETRY_COUNT}
